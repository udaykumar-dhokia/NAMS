/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as PublicAuthLayoutRouteImport } from './routes/_public/auth/_layout'
import { Route as ProtectedAdminLayoutRouteImport } from './routes/_protected/admin/_layout'
import { Route as PublicAuthLayoutRegisterRouteImport } from './routes/_public/auth/_layout.register'
import { Route as PublicAuthLayoutLoginRouteImport } from './routes/_public/auth/_layout.login'
import { Route as ProtectedAdminLayoutDashboardRouteImport } from './routes/_protected/admin/_layout.dashboard'

const PublicAuthRouteImport = createFileRoute('/_public/auth')()
const ProtectedAdminRouteImport = createFileRoute('/_protected/admin')()

const PublicAuthRoute = PublicAuthRouteImport.update({
  id: '/_public/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedAdminRoute = ProtectedAdminRouteImport.update({
  id: '/_protected/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicAuthLayoutRoute = PublicAuthLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => PublicAuthRoute,
} as any)
const ProtectedAdminLayoutRoute = ProtectedAdminLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ProtectedAdminRoute,
} as any)
const PublicAuthLayoutRegisterRoute =
  PublicAuthLayoutRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => PublicAuthLayoutRoute,
  } as any)
const PublicAuthLayoutLoginRoute = PublicAuthLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicAuthLayoutRoute,
} as any)
const ProtectedAdminLayoutDashboardRoute =
  ProtectedAdminLayoutDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => ProtectedAdminLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof PublicIndexRoute
  '/admin': typeof ProtectedAdminLayoutRouteWithChildren
  '/auth': typeof PublicAuthLayoutRouteWithChildren
  '/admin/dashboard': typeof ProtectedAdminLayoutDashboardRoute
  '/auth/login': typeof PublicAuthLayoutLoginRoute
  '/auth/register': typeof PublicAuthLayoutRegisterRoute
}
export interface FileRoutesByTo {
  '/': typeof PublicIndexRoute
  '/admin': typeof ProtectedAdminLayoutRouteWithChildren
  '/auth': typeof PublicAuthLayoutRouteWithChildren
  '/admin/dashboard': typeof ProtectedAdminLayoutDashboardRoute
  '/auth/login': typeof PublicAuthLayoutLoginRoute
  '/auth/register': typeof PublicAuthLayoutRegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_public/': typeof PublicIndexRoute
  '/_protected/admin': typeof ProtectedAdminRouteWithChildren
  '/_protected/admin/_layout': typeof ProtectedAdminLayoutRouteWithChildren
  '/_public/auth': typeof PublicAuthRouteWithChildren
  '/_public/auth/_layout': typeof PublicAuthLayoutRouteWithChildren
  '/_protected/admin/_layout/dashboard': typeof ProtectedAdminLayoutDashboardRoute
  '/_public/auth/_layout/login': typeof PublicAuthLayoutLoginRoute
  '/_public/auth/_layout/register': typeof PublicAuthLayoutRegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/admin/dashboard'
    | '/auth/login'
    | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth'
    | '/admin/dashboard'
    | '/auth/login'
    | '/auth/register'
  id:
    | '__root__'
    | '/_public/'
    | '/_protected/admin'
    | '/_protected/admin/_layout'
    | '/_public/auth'
    | '/_public/auth/_layout'
    | '/_protected/admin/_layout/dashboard'
    | '/_public/auth/_layout/login'
    | '/_public/auth/_layout/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
  ProtectedAdminRoute: typeof ProtectedAdminRouteWithChildren
  PublicAuthRoute: typeof PublicAuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public/auth': {
      id: '/_public/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof PublicAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/admin': {
      id: '/_protected/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof ProtectedAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/auth/_layout': {
      id: '/_public/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof PublicAuthLayoutRouteImport
      parentRoute: typeof PublicAuthRoute
    }
    '/_protected/admin/_layout': {
      id: '/_protected/admin/_layout'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof ProtectedAdminLayoutRouteImport
      parentRoute: typeof ProtectedAdminRoute
    }
    '/_public/auth/_layout/register': {
      id: '/_public/auth/_layout/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof PublicAuthLayoutRegisterRouteImport
      parentRoute: typeof PublicAuthLayoutRoute
    }
    '/_public/auth/_layout/login': {
      id: '/_public/auth/_layout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof PublicAuthLayoutLoginRouteImport
      parentRoute: typeof PublicAuthLayoutRoute
    }
    '/_protected/admin/_layout/dashboard': {
      id: '/_protected/admin/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof ProtectedAdminLayoutDashboardRouteImport
      parentRoute: typeof ProtectedAdminLayoutRoute
    }
  }
}

interface ProtectedAdminLayoutRouteChildren {
  ProtectedAdminLayoutDashboardRoute: typeof ProtectedAdminLayoutDashboardRoute
}

const ProtectedAdminLayoutRouteChildren: ProtectedAdminLayoutRouteChildren = {
  ProtectedAdminLayoutDashboardRoute: ProtectedAdminLayoutDashboardRoute,
}

const ProtectedAdminLayoutRouteWithChildren =
  ProtectedAdminLayoutRoute._addFileChildren(ProtectedAdminLayoutRouteChildren)

interface ProtectedAdminRouteChildren {
  ProtectedAdminLayoutRoute: typeof ProtectedAdminLayoutRouteWithChildren
}

const ProtectedAdminRouteChildren: ProtectedAdminRouteChildren = {
  ProtectedAdminLayoutRoute: ProtectedAdminLayoutRouteWithChildren,
}

const ProtectedAdminRouteWithChildren = ProtectedAdminRoute._addFileChildren(
  ProtectedAdminRouteChildren,
)

interface PublicAuthLayoutRouteChildren {
  PublicAuthLayoutLoginRoute: typeof PublicAuthLayoutLoginRoute
  PublicAuthLayoutRegisterRoute: typeof PublicAuthLayoutRegisterRoute
}

const PublicAuthLayoutRouteChildren: PublicAuthLayoutRouteChildren = {
  PublicAuthLayoutLoginRoute: PublicAuthLayoutLoginRoute,
  PublicAuthLayoutRegisterRoute: PublicAuthLayoutRegisterRoute,
}

const PublicAuthLayoutRouteWithChildren =
  PublicAuthLayoutRoute._addFileChildren(PublicAuthLayoutRouteChildren)

interface PublicAuthRouteChildren {
  PublicAuthLayoutRoute: typeof PublicAuthLayoutRouteWithChildren
}

const PublicAuthRouteChildren: PublicAuthRouteChildren = {
  PublicAuthLayoutRoute: PublicAuthLayoutRouteWithChildren,
}

const PublicAuthRouteWithChildren = PublicAuthRoute._addFileChildren(
  PublicAuthRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
  ProtectedAdminRoute: ProtectedAdminRouteWithChildren,
  PublicAuthRoute: PublicAuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
